generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(dbgenerated("concat('usr_', replace(cast(gen_random_uuid() as text), '-', ''))")) @db.Text
  email     String   @unique
  name      String?
  avatar    String?
  role      Role?    @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders  Order[]
  payment Payment[]
}

enum Role {
  ADMIN
  USER
}

model Product {
  id          String   @id @default(uuid())
  title       String
  description String
  price       Decimal
  stock       Int
  size        String
  color       String
  category    Category
  images      String[]
}

enum Category {
  CLOTHING
  ELECTRONICS
}

model Order {
  id        Int         @id @default(autoincrement())
  total     Decimal
  status    OrderStatus
  userId    String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  paymentId Int
  user      User        @relation(fields: [userId], references: [id])
  payment   Payment     @relation(fields: [paymentId], references: [id])
}

model Payment {
  id        Int           @id @default(autoincrement())
  userId    String
  orderId   Int
  amount    Decimal
  method    String
  status    PaymentStatus
  order     Order[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  user User @relation(fields: [userId], references: [id])
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELED
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}
